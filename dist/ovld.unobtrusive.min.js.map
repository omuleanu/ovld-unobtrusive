{"version":3,"file":"ovld.unobtrusive.min.js","sources":["../src/ovld.unobtrusive.js"],"sourcesContent":["(function (vld) {\r\n    let defaults = { autorun: 1 };\r\n    const { find, attr } = vld.core;\r\n    const attachedFlag = 'ovldunobs';\r\n\r\n    function data(elm, name, val) {\r\n        if (val === undefined) {\r\n            return elm.dataset[name];\r\n        }\r\n        else if (val === null) {\r\n            delete elm.dataset[name];\r\n        }\r\n        else {\r\n            elm.dataset[name] = val;\r\n        }\r\n    }\r\n\r\n    function bind({ selector, rules, related } = { selector: 'form' }) {\r\n        let destrFuncs = [];\r\n\r\n        find(document, selector).forEach(function (cont) {            \r\n            if (data(cont, attachedFlag)) {                \r\n                return;\r\n            }\r\n\r\n            data(cont, attachedFlag, 1);\r\n\r\n            const api = vld.bind({\r\n                subev: 'submit',\r\n                cont,\r\n                getRules: () => {\r\n                    return mergeRules(parseRules(cont), rules);\r\n                },\r\n                msgCont: function ({ input, name }) {\r\n                    const nodes = find(input.closest(selector), `[data-valmsg-for=\"${name}\"]`);           \r\n\r\n                    if (!nodes.length) return;\r\n\r\n                    return nodes[0];\r\n                },\r\n                related\r\n            });\r\n\r\n            destrFuncs.push(() => {\r\n                api.destroy();\r\n                data(cont, attachedFlag, null);\r\n            });\r\n        });\r\n\r\n        return {\r\n            destroy: () => {\r\n                destrFuncs.forEach(f => f());\r\n            }\r\n        };\r\n    }\r\n\r\n    function mergeRules(main, rules) {\r\n        if (rules) {\r\n            for (const key in rules) {\r\n                if (main[key] != null) {\r\n                    main[key] = [...main[key], ...rules[key]];\r\n                } else {\r\n                    main[key] = rules[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        return main;\r\n    }\r\n\r\n    function parseRules(form) {\r\n        const rules = {};\r\n\r\n        function addRule(key, rule) {\r\n            if (!rules[key]) rules[key] = [];\r\n            rules[key].push(rule);\r\n        }\r\n\r\n        var dval = 'data-val-';\r\n        var dmaxlen = `${dval}maxlength`;\r\n        var dminlen = `${dval}minlength`;\r\n        var dmaxlenmax = dmaxlen + '-max';\r\n        var dminlenmin = dminlen + '-min';\r\n\r\n        find(form, `[${dmaxlenmax}]`).forEach(function (inp) {\r\n            var max = attr(inp, dmaxlenmax);\r\n            addRule(attr(inp, 'name'), { chk: vld.rules.maxlen(max), msg: attr(inp, dmaxlen) });\r\n        });\r\n\r\n        find(form, `[${dminlenmin}]`).forEach(function (inp) {\r\n            var min = attr(inp, dminlenmin);\r\n            addRule(attr(inp, 'name'), { chk: vld.rules.minlen(min), msg: attr(inp, dminlen) });\r\n        });\r\n\r\n        find(form, `[${dval}length]`).forEach(function (inp) {\r\n            var min = attr(inp, `${dval}length-min`);\r\n            var max = attr(inp, `${dval}length-max`);\r\n            addRule(\r\n                attr(inp, 'name'),\r\n                {\r\n                    chk: vld.rules.len({ min, max }),\r\n                    msg: attr(inp, `${dval}length`)\r\n                });\r\n        });\r\n\r\n        find(form, `[${dval}required]`).forEach(function (inp) {\r\n            var name = attr(inp, 'name');\r\n            addRule(name, { chk: vld.rules.req, msg: attr(inp, `${dval}required`) });\r\n        });\r\n\r\n        return rules;\r\n    }\r\n\r\n    function validate({ cont, rules }) {\r\n        return vld.validate({ cont, rules: mergeRules(parseRules(cont), rules) });\r\n    }\r\n\r\n    function setDefaults(opt) {\r\n        defaults = Object.assign({}, defaults, opt);\r\n    }\r\n\r\n    // doc ready\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n        if (defaults.autorun) {\r\n            bind();\r\n        }\r\n    });\r\n\r\n    vld.unobtrusive = {\r\n        bind,\r\n        setDefaults,\r\n        validate\r\n    };\r\n}(window.ovld));"],"names":["vld","defaults","autorun","find","attr","core","attachedFlag","data","elm","name","val","dataset","bind","selector","rules","related","destrFuncs","document","forEach","cont","api","subev","getRules","mergeRules","parseRules","msgCont","input","nodes","closest","length","push","destroy","f","main","key","form","addRule","rule","dval","dmaxlen","dminlen","dmaxlenmax","dminlenmin","inp","max","chk","maxlen","msg","min","minlen","len","req","addEventListener","unobtrusive","setDefaults","opt","Object","assign","validate","window","ovld"],"mappings":"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"}