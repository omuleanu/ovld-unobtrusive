{"version":3,"file":"ovld.min.js","sources":["../src/ovld.js"],"sourcesContent":["(function (global) {\r\n    const inputFilter = '[name]:not([type=\"checkbox\"])';\r\n    const changeEventsArr = ['change', 'input'];\r\n\r\n    const rules = {\r\n        req: function ({ v }) {\r\n            return !v || !v.trim();\r\n        },\r\n        minlen: function (min) {\r\n            return function ({ v }) {\r\n                return v && (v.length < min);\r\n            };\r\n        },\r\n        maxlen: function (max) {\r\n            return function ({ v }) {\r\n                return v && (v.length > max);\r\n            };\r\n        },\r\n        len: function ({ min, max }) {\r\n            return function (o) {\r\n                return rules.minlen(min)(o) || rules.maxlen(max)(o);\r\n            }\r\n        }\r\n    };\r\n\r\n    function find(cont, filter) {\r\n        return cont.querySelectorAll(filter);\r\n    }\r\n\r\n    function attr(elm, name) {\r\n        return elm.getAttribute(name);\r\n    }\r\n\r\n    function val(elm) {\r\n        return elm.value;\r\n    }\r\n\r\n    function addClass(elm, name) {\r\n        elm.classList.add(name);\r\n    }\r\n\r\n    function remClass(elm, name) {\r\n        elm.classList.remove(name);\r\n    }\r\n\r\n    function append(elm, html) {\r\n        elm.insertAdjacentHTML('beforeend', html);\r\n    }\r\n\r\n    function empty(elm) {\r\n        elm && (elm.innerHTML = '');\r\n    }\r\n    \r\n    const core = { find, attr, val, addClass, remClass, append, empty };\r\n\r\n    /**\r\n     * @returns {Object<string, Array<InvRes>>} object with input name and invalid rules\r\n     */\r\n    function validateCont({ opt, cont, event }) {\r\n        let result = {};\r\n\r\n        find(cont, inputFilter)\r\n            .forEach(function (input) {\r\n                const checkRes = chkInp(opt, input, event);\r\n\r\n                if (checkRes && Object.keys(checkRes).length > 0) {\r\n                    result = { ...result, ...checkRes };\r\n                }\r\n            });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * check rules for input and related inputs\r\n     * @returns {Object<string, <Input, Array<Rule|CheckRes>>>} object with input name and invalid rules\r\n     */\r\n    function chkInp(opt, input, event) {\r\n        if (opt.ignore && opt.ignore(input) || ovld.ignore(input)) return;\r\n\r\n        const name = attr(input, 'name');\r\n        if (!name) return;\r\n\r\n        const res = {};\r\n\r\n        if (opt.tched) {\r\n            opt.tched[name] = input;\r\n        }\r\n\r\n        res[name] = { input, rules: chkRulesFor({ opt, name, event, input }) };\r\n\r\n        const related = opt.related;\r\n\r\n        if (opt.tched && related && related[name]) {\r\n            related[name].forEach(function (rname) {\r\n                const relInput = opt.tched[rname];\r\n                if (relInput) {\r\n                    res[rname] = { input: relInput, rules: chkRulesFor({ opt, name: rname, event, input: relInput }) };\r\n                }\r\n            });\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * @returns {Array<Rule|CheckRes>} array of invalid rules\r\n     */\r\n    function chkRulesFor({ opt, name, event, input }) {\r\n        let invRules = [];\r\n        let rls = (opt.getRules ? opt.getRules() : opt.rules)[name];\r\n\r\n        if (!rls) return invRules;\r\n        if (!Array.isArray(rls)) rls = [rls];\r\n\r\n\r\n        rls.forEach(function (rule) {\r\n            var checkRes = rule.chk({ v: val(input), event, input, name });\r\n            if (checkRes) {\r\n                invRules.push(checkRes.msg ? checkRes : rule);\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return invRules;\r\n    }\r\n\r\n    function applyToDoc({ opt, res }) {        \r\n        Object.entries(res)\r\n            .forEach(([name, { input, rules }]) => {\r\n\r\n                const msgc = opt.msgCont({ input, name });\r\n                if (!msgc) {                    \r\n                    if (rules.length) {\r\n                        console.warn(`no message container for ${name}`);\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                empty(msgc);\r\n                remClass(msgc, 'field-validation-valid');\r\n\r\n                if (!rules || !rules.length) {\r\n                    if (msgc) {\r\n                        remClass(msgc, 'field-validation-error');\r\n                        addClass(msgc, 'field-validation-valid');\r\n                    }                    \r\n                }\r\n                else if (msgc.matches('[data-valmsg-replace]')) {\r\n                    addClass(msgc, 'field-validation-error');                    \r\n                    msgc.innerHTML = rules[0].msg;\r\n                }\r\n                else {\r\n                    append(msgc, '<div class=\"field-validation-error\">' + rules[0].msg + '</div>');\r\n                }\r\n\r\n            });\r\n    }\r\n\r\n    function isResValid(res) {\r\n        return !Object.values(res).some(({ rules }) => rules.length);\r\n    }\r\n\r\n    function bind(nodes, events, handler, flt) {\r\n        const $ = window.jQuery;\r\n\r\n        if ($) {\r\n            // $ will catch events triggered by both $ and vanilla\r\n            const ename = events.join(' ');\r\n            $(nodes).on(ename, flt, handler);\r\n\r\n            return [() => $(nodes).off(ename, flt, handler)];\r\n        }\r\n\r\n        let unbinds = [];\r\n        let fhandler = handler;\r\n        if (flt) {\r\n            fhandler = function (event) {\r\n                if (event.target.matches(flt)) {\r\n                    handler.call(this, event);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (nodes instanceof NodeList) {\r\n            nodes = [...nodes];\r\n        }\r\n        else {\r\n            nodes = [nodes];\r\n        }\r\n\r\n        nodes.forEach(function (node) {\r\n            events.forEach(function (ev) {                \r\n                node.addEventListener(ev, fhandler);\r\n                unbinds.push(() => node.removeEventListener(ev, fhandler));\r\n            });\r\n        });\r\n\r\n        return unbinds;\r\n    }\r\n\r\n    const ovld = {\r\n        core,\r\n        ignore: function (inp) {\r\n        },\r\n        rules: rules,\r\n        validate: function (opt) {\r\n            return validateCont({ opt, cont: opt.cont });\r\n        },\r\n        /**\r\n         *  \r\n         * @param {Object} opt - options \r\n         * @param {Object} options.cont - container\r\n         * @param {string} options.selector - selector \r\n         * @param {string} options.subev - submit event, check on event         \r\n         */\r\n        bind: function (opt) {\r\n            opt.tched = {};\r\n            const conts = opt.cont || find(document, opt.selector);\r\n\r\n            let unbinds = [];\r\n            unbinds.push(...bind(conts, changeEventsArr, onInput, inputFilter));\r\n\r\n            if (opt.subev) {\r\n                unbinds.push(...bind(conts, [opt.subev], onSubmit));\r\n            }\r\n\r\n            function onInput(e) {\r\n                const input = e.target;\r\n                const type = attr(input, 'type');\r\n\r\n                if (type == 'checkbox' || type == 'radio') {\r\n                    return;\r\n                }\r\n\r\n                const res = chkInp(opt, input, e);\r\n\r\n                if (res) {\r\n                    applyToDoc({ opt, res });\r\n                }\r\n            }\r\n\r\n            function onSubmit(ev, evData) {                \r\n                const res = validateCont({ opt, cont: ev.target, event: ev });\r\n                try {\r\n                    applyToDoc({ opt, res });\r\n                }\r\n                catch (ex) {\r\n                    ev.preventDefault();\r\n                    throw ex;                    \r\n                }\r\n                \r\n                if (!isResValid(res)) {\r\n                    ev.preventDefault();\r\n                    if (evData) {\r\n                        evData.cancel = 1;\r\n                        evData.target = this; // set invalid cont (row)\r\n                    }\r\n\r\n                    ev.stopImmediatePropagation();\r\n                    ev.target.dispatchEvent(new Event(\"ovldinvalidate\", { cancelable: true, bubbles: true, isTrusted: true }));\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return {\r\n                destroy: function () {\r\n                    unbinds.forEach(f => f());\r\n                }\r\n            };\r\n        }\r\n    };\r\n\r\n    global.ovld = ovld;\r\n})(window);"],"names":["global","inputFilter","changeEventsArr","rules","req","v","trim","minlen","min","length","maxlen","max","len","o","find","cont","filter","querySelectorAll","attr","elm","name","getAttribute","val","value","addClass","classList","add","remClass","remove","append","html","insertAdjacentHTML","empty","innerHTML","validateCont","opt","event","result","forEach","input","checkRes","chkInp","Object","keys","ignore","ovld","res","tched","chkRulesFor","related","rname","relInput","invRules","rls","getRules","Array","isArray","rule","chk","push","msg","applyToDoc","entries","msgc","msgCont","matches","console","warn","bind","nodes","events","handler","flt","$","window","jQuery","ename","join","on","off","unbinds","fhandler","target","call","this","NodeList","node","ev","addEventListener","removeEventListener","core","inp","validate","conts","document","selector","e","type","subev","evData","ex","preventDefault","values","some","isResValid","cancel","stopImmediatePropagation","dispatchEvent","Event","cancelable","bubbles","isTrusted","destroy","f"],"mappings":"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"}